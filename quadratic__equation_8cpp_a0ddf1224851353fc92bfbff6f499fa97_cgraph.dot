digraph "main"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="main",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="flags_handling",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$flags__handling_8cpp.html#a87e66f235e48989e9e99afdb63584cf4",tooltip="Function processes incoming flags."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="result_output",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$user__communication_8cpp.html#a1d83ecb180d58945ed36f03388b20749",tooltip="Print result of equation solving."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="double_comparing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$double__compare_8cpp.html#a251267aa96f072f7c78a03fe1b232b20",tooltip="Compares two doubles."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="run_testing_system",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$unit__test_8cpp.html#a0083b8b5485db15987c2f0041442ffab",tooltip="Function starts tests."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="run_test",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$unit__test_8cpp.html#acb671112c73a49f9fdf13c14f7c0c41f",tooltip="Function starts one exact test."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="color_print",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$color__print_8cpp.html#a812c7ac2b90d6deb9b00c8f16d982248",tooltip="Function print colorful text what sets with three parameters."];
  Node7 -> Node8 [id="edge7_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="style_selector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$color__print_8cpp.html#a643e75f7e44cbc62aa32fddccbe76cb1",tooltip="Function change color of console text what sets with two parameters."];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="compare_results",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$unit__test_8cpp.html#a1d1ecab469652425009f4ef15bdb5a83",tooltip="Compare result of test with expect values."];
  Node9 -> Node4 [id="edge9_Node000009_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node10 [id="edge10_Node000006_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="solve_equation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#a716f9968e866c4700c17bc0c4001e7c4",tooltip="Function call solve_square() or solve_linear() solves equation in case of find_type_of_square()"];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="find_type_of_square",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#a9cae33c52650112b82cb824082a67183",tooltip=" "];
  Node11 -> Node4 [id="edge12_Node000011_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node12 [id="edge13_Node000010_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="solve_linear",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#af8a14a7e5c6cd235f521b87ca39d3d84",tooltip=" "];
  Node12 -> Node4 [id="edge14_Node000012_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node13 [id="edge15_Node000010_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="solve_square",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$solve__equation_8cpp.html#aac83004a0d680ca9380bba859275fca2",tooltip=" "];
  Node13 -> Node4 [id="edge16_Node000013_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge17_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge18_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="user_input",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$user__communication_8cpp.html#a9687666661257b5f913fa1799e53d2dd",tooltip="User input equation coefficients."];
  Node14 -> Node15 [id="edge19_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="coefficient_check_finite",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$double__compare_8cpp.html#ab33bea4525e6540c95968982193b81d7",tooltip="Checks if the number has a valid double value."];
}
